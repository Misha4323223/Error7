/**
 * –¢–µ—Å—Ç API —á–∞—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

const axios = require('axios');

async function testChatAPI() {
  console.log('üîß –¢–ï–°–¢ API –ß–ê–¢–ê –ü–û–°–õ–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø');
  console.log('=' .repeat(50));
  
  try {
    const testMessage = "–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–≥–æ–Ω—å?";
    
    console.log(`üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å: "${testMessage}"`);
    console.log('üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST /api/ai/chat...');
    
    const response = await axios.post('http://localhost:5000/api/ai/chat', {
      message: testMessage,
      userId: 'test-user',
      sessionId: 'test-session'
    }, {
      timeout: 10000
    });
    
    if (response.status === 200 && response.data) {
      console.log('‚úÖ API –û–¢–í–ï–¢–ò–õ –£–°–ü–ï–®–ù–û');
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`üì® –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: ${response.data.response ? '–î–ê' : '–ù–ï–¢'}`);
      
      if (response.data.response) {
        const responseText = response.data.response;
        console.log(`üìù –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: ${responseText.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        console.log(`üîç –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: ${responseText.includes('—Å–∏—Å—Ç–µ–º–µ —Å–æ–∑–Ω–∞–Ω–∏—è') ? '–û–®–ò–ë–ö–ê' : '–ù–û–†–ú–ê–õ–¨–ù–´–ô'}`);
        console.log(`üìñ –§—Ä–∞–≥–º–µ–Ω—Ç –æ—Ç–≤–µ—Ç–∞: "${responseText.substring(0, 150)}..."`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
        if (responseText.includes('—Å–∏—Å—Ç–µ–º–µ —Å–æ–∑–Ω–∞–Ω–∏—è') || responseText.includes('–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')) {
          console.log('‚ùå –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ê–Ø –°–ò–°–¢–ï–ú–ê –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –í LIVE –†–ï–ñ–ò–ú–ï');
          console.log('üîß –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Å–∏—Å—Ç–µ–º–∞ –≤—Å–µ –µ—â–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç fallback –æ—à–∏–±–∫–∏');
          return false;
        } else if (responseText.length > 50 && !responseText.includes('–ò–∑–≤–∏–Ω–∏—Ç–µ')) {
          console.log('‚úÖ –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û');
          console.log('üéâ –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
          return true;
        } else {
          console.log('‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–ê–Ø –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–¨');
          console.log('üìà –°–∏—Å—Ç–µ–º–∞ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –æ—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º–∏');
          return false;
        }
      } else {
        console.log('‚ùå –û–¢–í–ï–¢ –ü–£–°–¢');
        return false;
      }
    } else {
      console.log(`‚ùå API –û–®–ò–ë–ö–ê: ${response.status}`);
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö API:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('üîß –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000');
    } else if (error.code === 'ENOTFOUND') {
      console.log('üîß –ü—Ä–æ–±–ª–µ–º–∞ —Å DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º localhost');
    } else {
      console.log('üîß –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
    
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testChatAPI()
  .then(success => {
    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('=' .repeat(50));
    
    if (success) {
      console.log('‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù - –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –í LIVE –†–ï–ñ–ò–ú–ï');
      console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    } else {
      console.log('‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù - –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê');
      console.log('üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ –∏ live —Å–∏—Å—Ç–µ–º–æ–π');
    }
    
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê:', error);
    process.exit(1);
  });