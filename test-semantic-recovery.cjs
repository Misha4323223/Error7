/**
 * –¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
 */

async function testSemanticRecovery() {
  console.log('üîß –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –°–ò–°–¢–ï–ú–´');
  console.log('=' .repeat(50));
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É natural-language-generator
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º natural-language-generator...');
    const NLGClass = require('./server/semantic-memory/natural-language-generator.cjs');
    
    if (NLGClass && typeof NLGClass === 'function') {
      console.log('‚úÖ natural-language-generator: –ö–õ–ê–°–° –ó–ê–ì–†–£–ñ–ï–ù');
      
      // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º
      try {
        const nlg = new NLGClass();
        if (nlg && typeof nlg.generateResponse === 'function') {
          console.log('‚úÖ natural-language-generator: –≠–ö–ó–ï–ú–ü–õ–Ø–† –°–û–ó–î–ê–ù –ò –§–£–ù–ö–¶–ò–û–ù–ê–õ–ï–ù');
          
          // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞
          const testResponse = nlg.generateResponse("–ü—Ä–∏–≤–µ—Ç", {});
          if (testResponse && testResponse.length > 0) {
            console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤: –†–ê–ë–û–¢–ê–ï–¢');
            console.log(`üìù –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: "${testResponse.substring(0, 100)}..."`);
          } else {
            console.log('‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤: –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
          }
        } else {
          console.log('‚ùå natural-language-generator: –ú–ï–¢–û–î generateResponse –ù–ï –ù–ê–ô–î–ï–ù');
          return false;
        }
      } catch (error) {
        console.log(`‚ùå natural-language-generator: –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê - ${error.message}`);
        return false;
      }
    } else {
      console.log('‚ùå natural-language-generator: –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò');
      return false;
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É semantic-memory
    console.log('\nüß† –¢–µ—Å—Ç–∏—Ä—É–µ–º semantic-memory...');
    const semanticMemory = require('./server/semantic-memory/index.cjs');
    
    if (semanticMemory) {
      console.log('‚úÖ semantic-memory: –ú–û–î–£–õ–¨ –ó–ê–ì–†–£–ñ–ï–ù');
      
      // –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
      if (typeof semanticMemory.analyzeCompleteRequest === 'function') {
        console.log('‚úÖ analyzeCompleteRequest: –ú–ï–¢–û–î –î–û–°–¢–£–ü–ï–ù');
        
        const testAnalysis = await semanticMemory.analyzeCompleteRequest("–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å");
        if (testAnalysis) {
          console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑: –†–ê–ë–û–¢–ê–ï–¢');
          console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞: confidence ${testAnalysis.confidence || 'N/A'}`);
        }
      }
    } else {
      console.log('‚ùå semantic-memory: –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò');
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏...');
    
    const modules = [
      { name: 'semantic-analyzer', path: './server/semantic-memory/semantic-analyzer.cjs' },
      { name: 'meta-semantic-engine', path: './server/semantic-memory/meta-semantic-engine.cjs' },
      { name: 'emotional-semantic-matrix', path: './server/semantic-memory/emotional-semantic-matrix.cjs' }
    ];
    
    let loadedModules = 0;
    
    for (const module of modules) {
      try {
        const loadedModule = require(module.path);
        if (loadedModule) {
          console.log(`‚úÖ ${module.name}: –ó–ê–ì–†–£–ñ–ï–ù`);
          loadedModules++;
        } else {
          console.log(`‚ùå ${module.name}: –ù–ï –ó–ê–ì–†–£–ñ–ï–ù`);
        }
      } catch (error) {
        console.log(`‚ùå ${module.name}: –û–®–ò–ë–ö–ê - ${error.message}`);
      }
    }
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:');
    console.log('=' .repeat(50));
    console.log(`‚úÖ natural-language-generator: –ò–°–ü–†–ê–í–õ–ï–ù –ò –§–£–ù–ö–¶–ò–û–ù–ê–õ–ï–ù`);
    console.log(`‚úÖ –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: ${loadedModules}/${modules.length}`);
    
    if (loadedModules === modules.length) {
      console.log('\nüéâ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!');
      console.log('üìà –û–∂–∏–¥–∞–µ–º–∞—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: 98%+');
      console.log('üöÄ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ');
      return true;
    } else {
      console.log('\n‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï');
      console.log('üìà –†–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã —É–ª—É—á—à–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã');
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSemanticRecovery()
  .then(success => {
    if (success) {
      console.log('\n‚úÖ –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û');
      process.exit(0);
    } else {
      console.log('\n‚ùå –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ù–ï –ü–†–û–ô–î–ï–ù');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('‚ùå –û–®–ò–ë–ö–ê –í–´–ü–û–õ–ù–ï–ù–ò–Ø –¢–ï–°–¢–ê:', error);
    process.exit(1);
  });