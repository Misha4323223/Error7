#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ES –º–æ–¥—É–ª–µ–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ visual-semantic –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
 */

console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ES –º–æ–¥—É–ª–µ–π...\n');

async function testESModuleFix() {
  const results = {
    visualSemanticIntegration: false,
    advancedImageAnalyzer: false,
    smartVisionAnalyzer: false,
    smartObjectDetector: false,
    intelligentChatProcessor: false
  };

  // –¢–µ—Å—Ç 1: visual-semantic-integration.cjs
  try {
    console.log('üìã –¢–µ—Å—Ç 1: visual-semantic-integration.cjs');
    const integration = require('./server/visual-semantic-integration.cjs');
    console.log('   ‚úÖ visual-semantic-integration –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    results.visualSemanticIntegration = true;
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 2: advanced-image-analyzer.cjs
  try {
    console.log('üìã –¢–µ—Å—Ç 2: advanced-image-analyzer.cjs');
    const analyzer = require('./server/advanced-image-analyzer.cjs');
    console.log('   ‚úÖ advanced-image-analyzer –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    results.advancedImageAnalyzer = true;
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 3: smart-vision-analyzer.cjs
  try {
    console.log('üìã –¢–µ—Å—Ç 3: smart-vision-analyzer.cjs');
    const analyzer = require('./server/smart-vision-analyzer.cjs');
    console.log('   ‚úÖ smart-vision-analyzer –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    results.smartVisionAnalyzer = true;
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 4: smart-object-detector.cjs
  try {
    console.log('üìã –¢–µ—Å—Ç 4: smart-object-detector.cjs');
    const detector = require('./server/smart-object-detector.cjs');
    console.log('   ‚úÖ smart-object-detector –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    results.smartObjectDetector = true;
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 5: intelligent-chat-processor.cjs (–∫—Ä–∞—Ç–∫–∏–π —Ç–µ—Å—Ç)
  try {
    console.log('üìã –¢–µ—Å—Ç 5: intelligent-chat-processor.cjs');
    const processor = require('./server/intelligent-chat-processor.cjs');
    console.log('   ‚úÖ intelligent-chat-processor –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    results.intelligentChatProcessor = true;
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  const successful = Object.values(results).filter(Boolean).length;
  const total = Object.keys(results).length;
  
  Object.entries(results).forEach(([module, success]) => {
    console.log(`   ${success ? '‚úÖ' : '‚ùå'} ${module}`);
  });

  console.log(`\nüìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${successful}/${total} (${((successful/total)*100).toFixed(1)}%)`);
  
  if (successful === total) {
    console.log('üéâ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫ ES –º–æ–¥—É–ª–µ–π!');
    return true;
  } else {
    console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –≤—Å–µ –µ—â–µ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å ES –º–æ–¥—É–ª—è–º–∏');
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testESModuleFix()
  .then(success => {
    if (success) {
      console.log('\nüöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ES –º–æ–¥—É–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    } else {
      console.log('\nüí• –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });