#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è Visual-Semantic Proxy
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å JS-–º–æ—Å—Ç–∏–∫–æ–≤ –∫ CJS —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
 */

console.log('üåâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...\n');

async function testDynamicProxySystem() {
  const results = {
    proxy: false,
    advancedImageAnalyzer: false,
    smartVisionAnalyzer: false,
    smartObjectDetector: false,
    comprehensive: false
  };

  // –¢–µ—Å—Ç 1: Visual-Semantic Proxy
  try {
    console.log('üìã –¢–µ—Å—Ç 1: Visual-Semantic Proxy');
    const proxy = require('./server/visual-semantic-proxy.cjs');
    console.log('   ‚úÖ Visual-Semantic Proxy –∑–∞–≥—Ä—É–∂–µ–Ω');
    results.proxy = true;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
    console.log('   üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:');
    console.log('   - getAdvancedImageAnalyzer:', typeof proxy.getAdvancedImageAnalyzer);
    console.log('   - getSmartVisionAnalyzer:', typeof proxy.getSmartVisionAnalyzer);
    console.log('   - getSmartObjectDetector:', typeof proxy.getSmartObjectDetector);
    console.log('   - analyzeVisualContent:', typeof proxy.analyzeVisualContent);
    console.log('   - checkHealth:', typeof proxy.checkHealth);
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 2: Advanced Image Analyzer —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫
  try {
    console.log('\nüìã –¢–µ—Å—Ç 2: Advanced Image Analyzer (JS Bridge)');
    const analyzer = require('./server/advanced-image-analyzer.js');
    console.log('   ‚úÖ Advanced Image Analyzer –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫');
    results.advancedImageAnalyzer = true;
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑
    const analysisResult = await analyzer.analyzeImage('test-image-data');
    console.log('   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:', analysisResult.status);
    console.log('   üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', analysisResult.confidence);
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 3: Smart Vision Analyzer —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫
  try {
    console.log('\nüìã –¢–µ—Å—Ç 3: Smart Vision Analyzer (JS Bridge)');
    const analyzer = require('./server/smart-vision-analyzer.js');
    console.log('   ‚úÖ Smart Vision Analyzer –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫');
    results.smartVisionAnalyzer = true;
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –∑—Ä–µ–Ω–∏—è
    const visionResult = await analyzer.analyzeVision('test-vision-data');
    console.log('   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∑—Ä–µ–Ω–∏—è:', visionResult.confidence);
    console.log('   üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ª–∏—Ü:', visionResult.faces?.faces_detected || 0);
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 4: Smart Object Detector —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫
  try {
    console.log('\nüìã –¢–µ—Å—Ç 4: Smart Object Detector (JS Bridge)');
    const detector = require('./server/smart-object-detector.js');
    console.log('   ‚úÖ Smart Object Detector –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ JS-–º–æ—Å—Ç–∏–∫');
    results.smartObjectDetector = true;
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é –æ–±—ä–µ–∫—Ç–æ–≤
    const detectionResult = await detector.detectObjects('test-detection-data');
    console.log('   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏:', detectionResult.confidence);
    console.log('   üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:', detectionResult.objects?.length || 0);
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –¢–µ—Å—Ç 5: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
  try {
    console.log('\nüìã –¢–µ—Å—Ç 5: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
    const proxy = require('./server/visual-semantic-proxy.cjs');
    
    const comprehensiveResult = await proxy.analyzeVisualContent('test-comprehensive-data', 'comprehensive');
    console.log('   ‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
    console.log('   üìä –û–±—â–∏–π –±–∞–ª–ª:', comprehensiveResult.comprehensive_score);
    console.log('   üìä –¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞:', comprehensiveResult.analysis_type);
    results.comprehensive = true;
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  const successful = Object.values(results).filter(Boolean).length;
  const total = Object.keys(results).length;
  
  Object.entries(results).forEach(([module, success]) => {
    console.log(`   ${success ? '‚úÖ' : '‚ùå'} ${module}`);
  });

  console.log(`\nüìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${successful}/${total} (${((successful/total)*100).toFixed(1)}%)`);
  
  if (successful === total) {
    console.log('üéâ –°–∏—Å—Ç–µ–º–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ!');
    console.log('üåâ JS-–º–æ—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –≤—Å–µ –≤—ã–∑–æ–≤—ã –Ω–∞ CJS —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è');
    console.log('üîß –ü—Ä–æ–±–ª–µ–º–∞ ES modules —Ä–µ—à–µ–Ω–∞ —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ');
    return true;
  } else {
    console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testDynamicProxySystem()
  .then(success => {
    if (success) {
      console.log('\nüöÄ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
      process.exit(0);
    } else {
      console.log('\nüí• –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });