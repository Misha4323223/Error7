/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π 4-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ fallback –æ—Ç–≤–µ—Ç—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ
 */

const path = require('path');

// –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π
const logger = {
  test: (msg, data) => console.log(`[TEST] ${msg}`, data || ''),
  success: (msg, data) => console.log(`‚úÖ [TEST] ${msg}`, data || ''),
  warn: (msg, data) => console.log(`‚ö†Ô∏è [TEST] ${msg}`, data || ''),
  error: (msg, data) => console.log(`‚ùå [TEST] ${msg}`, data || '')
};

async function testFixedSemanticSystem() {
  logger.test('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô 4-–£–†–û–í–ù–ï–í–û–ô –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –°–ò–°–¢–ï–ú–´');
  logger.test('–¶–µ–ª—å: –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ fallback –æ—Ç–≤–µ—Ç—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ');

  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
    logger.test('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...');
    
    const { getChatResponse } = await import('./server/smart-router.js');
    logger.test('‚úÖ Smart-router –∑–∞–≥—Ä—É–∂–µ–Ω');

    // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–µ–º–∞–Ω—Ç–∏–∫–∏
    const testQueries = [
      {
        query: "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?",
        expectedLevel: "greeting",
        description: "–¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"
      },
      {
        query: "–°–æ–∑–¥–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞",
        expectedLevel: "image_generation",
        description: "–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
      },
      {
        query: "–ü–æ–º–æ–≥–∏ –º–Ω–µ —Å –≤—ã–±–æ—Ä–æ–º —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞",
        expectedLevel: "consultation",
        description: "–¢–µ—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"
      },
      {
        query: "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
        expectedLevel: "information",
        description: "–¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"
      },
      {
        query: "–ö–∞–∫–∏–µ —Å—Ç–∏–ª–∏ –≤—ã—à–∏–≤–∫–∏ —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å?",
        expectedLevel: "technical",
        description: "–¢–µ—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"
      }
    ];

    let successCount = 0;
    let totalTests = testQueries.length;

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
    for (const [index, testCase] of testQueries.entries()) {
      logger.test(`\nüß™ –¢–ï–°–¢ ${index + 1}/${totalTests}: ${testCase.description}`);
      logger.test(`üìù –ó–∞–ø—Ä–æ—Å: "${testCase.query}"`);

      try {
        const startTime = Date.now();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ smart-router
        const result = await getChatResponse(testCase.query, {
          sessionId: 'test-session',
          testMode: true
        });

        const processingTime = Date.now() - startTime;

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (result && result.success && result.response) {
          logger.test(`‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç (${processingTime}–º—Å)`);
          logger.test(`üéØ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${result.provider}`);
          logger.test(`üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidence || 'N/A'}`);
          logger.test(`üîß –ú–µ—Ç–æ–¥: ${result.method || result.routedBy || 'N/A'}`);

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
          const isIntelligentResponse = checkResponseQuality(result.response, testCase);
          
          if (isIntelligentResponse) {
            logger.success(`–ö–ê–ß–ï–°–¢–í–ï–ù–ù–´–ô –û–¢–í–ï–¢: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
            logger.test(`üìù –û—Ç–≤–µ—Ç: "${result.response.substring(0, 150)}..."`);
            successCount++;
          } else {
            logger.warn(`–ë–ê–ó–û–í–´–ô –û–¢–í–ï–¢: –í–æ–∑–º–æ–∂–µ–Ω fallback`);
            logger.test(`üìù –û—Ç–≤–µ—Ç: "${result.response.substring(0, 150)}..."`);
          }

        } else {
          logger.error(`–ù–ï–¢ –û–¢–í–ï–¢–ê –∏–ª–∏ –æ—à–∏–±–∫–∞`);
          logger.test(`üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:`, result);
        }

      } catch (testError) {
        logger.error(`–û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: ${testError.message}`);
      }

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 500));
    }

    // –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    logger.test(`\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:`);
    logger.test(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${totalTests}`);
    logger.test(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round((successCount / totalTests) * 100)}%`);

    if (successCount >= totalTests * 0.8) { // 80% —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
      logger.success(`–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ô–î–ï–ù–û! –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
      logger.success(`4-—É—Ä–æ–≤–Ω–µ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç`);
      logger.success(`Fallback –æ—Ç–≤–µ—Ç—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ`);
      logger.success(`–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é`);
    } else {
      logger.warn(`–¢–†–ï–ë–£–Æ–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ò: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤`);
      logger.warn(`–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏`);
    }

  } catch (error) {
    logger.error(`–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: ${error.message}`);
    logger.test(`üìù –°—Ç–µ–∫:`, error.stack);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞ - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º
 */
function checkResponseQuality(response, testCase) {
  const responseLower = response.toLowerCase();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ fallback —Ñ—Ä–∞–∑—ã (–ø–ª–æ—Ö–æ)
  const fallbackPhrases = [
    '–±–∞–∑–æ–≤—ã–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
    '—Å–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è',
    '–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
    '–∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞',
    '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'
  ];

  const hasFallbackPhrase = fallbackPhrases.some(phrase => responseLower.includes(phrase));
  if (hasFallbackPhrase) {
    return false; // –≠—Ç–æ fallback –æ—Ç–≤–µ—Ç
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ä–∫–µ—Ä—ã (—Ö–æ—Ä–æ—à–æ)
  const qualityMarkers = [
    'booomerangs', // –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞
    '—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞', // –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    '–∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è', // –ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å
    '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π', // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    '–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    '–º–æ–≥—É –ø–æ–º–æ—á—å', // –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å
    '—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å', // –≠–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å
    '–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é', // –ê–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    '—Å–æ–∑–¥–∞–º', // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    '–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é' // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  ];

  const hasQualityMarker = qualityMarkers.some(marker => responseLower.includes(marker));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ (–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ–±—ã—á–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ)
  const isDetailedResponse = response.length > 100;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ—Å—Ç—å (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø—É –∑–∞–ø—Ä–æ—Å–∞)
  const isContextual = checkContextRelevance(response, testCase);

  return hasQualityMarker && isDetailedResponse && isContextual;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∑–∞–ø—Ä–æ—Å–∞
 */
function checkContextRelevance(response, testCase) {
  const responseLower = response.toLowerCase();
  const queryLower = testCase.query.toLowerCase();

  // –î–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  if (testCase.expectedLevel === 'greeting') {
    return responseLower.includes('–ø—Ä–∏–≤–µ—Ç') || responseLower.includes('–ø–æ–º–æ—â—å') || responseLower.includes('–º–æ–≥—É');
  }

  // –î–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  if (testCase.expectedLevel === 'image_generation') {
    return responseLower.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏') || responseLower.includes('—Å–æ–∑–¥–∞–º') || responseLower.includes('–≥–µ–Ω–µ—Ä–∞—Ü');
  }

  // –î–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  if (testCase.expectedLevel === 'consultation') {
    return responseLower.includes('–ø–æ–º–æ–≥') || responseLower.includes('—Å–æ–≤–µ—Ç') || responseLower.includes('—Ä–µ–∫–æ–º–µ–Ω–¥');
  }

  // –î–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  if (testCase.expectedLevel === 'information') {
    return responseLower.includes('–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü') || responseLower.includes('–∏–Ω—Ñ–æ—Ä–º–∞—Ü') || responseLower.includes('–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç');
  }

  // –î–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  if (testCase.expectedLevel === 'technical') {
    return responseLower.includes('–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞') || responseLower.includes('—Ñ–æ—Ä–º–∞—Ç') || responseLower.includes('—Å—Ç–∏–ª');
  }

  return true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  testFixedSemanticSystem().catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  });
}

module.exports = { testFixedSemanticSystem, checkResponseQuality };