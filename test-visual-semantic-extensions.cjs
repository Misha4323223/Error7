#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç Visual-Semantic Extensions
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
 */

console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Visual-Semantic Extensions...\n');

async function testVisualSemanticExtensions() {
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å
    console.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º visual-semantic-extensions...');
    const visualSemanticExtensions = require('./server/semantic-memory/visual-semantic-extensions.cjs');
    
    if (!visualSemanticExtensions) {
      throw new Error('–ú–æ–¥—É–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    }
    
    console.log('‚úÖ –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ\n');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π
    console.log('üîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π');
    console.log('   Advanced Image Analyzer:', visualSemanticExtensions.advancedImageAnalyzer ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('   Smart Vision Analyzer:', visualSemanticExtensions.smartVisionAnalyzer ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('   Smart Object Detector:', visualSemanticExtensions.smartObjectDetector ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('');
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –º–æ–¥—É–ª–µ–π
    console.log('üîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –º–æ–¥—É–ª–µ–π');
    const healthCheck = visualSemanticExtensions.checkHealth();
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è:', JSON.stringify(healthCheck, null, 2));
    console.log('');
    
    // –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Advanced Image Analyzer
    console.log('üîç –¢–µ—Å—Ç 3: Advanced Image Analyzer');
    const imageAnalysisResult = await visualSemanticExtensions.advancedImageAnalyzer.analyzeImage('test-image-data');
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
    console.log('   - –°—Ç–∞—Ç—É—Å:', imageAnalysisResult.status);
    console.log('   - –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', imageAnalysisResult.confidence);
    console.log('   - –î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —Ü–≤–µ—Ç–∞:', imageAnalysisResult.color_analysis?.dominant_colors?.length || 0);
    console.log('   - –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:', imageAnalysisResult.objects?.length || 0);
    console.log('');
    
    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Smart Vision Analyzer
    console.log('üîç –¢–µ—Å—Ç 4: Smart Vision Analyzer');
    const visionAnalysisResult = await visualSemanticExtensions.smartVisionAnalyzer.analyzeVision('test-vision-data');
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∑—Ä–µ–Ω–∏—è:');
    console.log('   - –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', visionAnalysisResult.confidence);
    console.log('   - –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ª–∏—Ü:', visionAnalysisResult.faces?.faces_detected || 0);
    console.log('   - –û—Å–Ω–æ–≤–Ω–∞—è —ç–º–æ—Ü–∏—è:', visionAnalysisResult.emotions?.primary_emotion || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   - –¢–∏–ø —Å—Ü–µ–Ω—ã:', visionAnalysisResult.scene?.scene_type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('');
    
    // –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Smart Object Detector
    console.log('üîç –¢–µ—Å—Ç 5: Smart Object Detector');
    const objectDetectionResult = await visualSemanticExtensions.smartObjectDetector.detectObjects('test-detection-data');
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤:');
    console.log('   - –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', objectDetectionResult.confidence);
    console.log('   - –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:', objectDetectionResult.objects?.length || 0);
    console.log('   - –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ü–µ–Ω–∞:', objectDetectionResult.scene_classification?.primary_scene || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π:', objectDetectionResult.spatial_relations?.relations?.length || 0);
    console.log('');
    
    // –¢–µ—Å—Ç 6: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('üîç –¢–µ—Å—Ç 6: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑');
    const comprehensiveResult = await visualSemanticExtensions.analyzeVisualContent('test-comprehensive-data', 'comprehensive');
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:');
    console.log('   - –û–±—â–∏–π –±–∞–ª–ª:', comprehensiveResult.comprehensive_score || 0);
    console.log('   - –¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞:', comprehensiveResult.analysis_type);
    console.log('   - –ï—Å—Ç—å –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', !!comprehensiveResult.image_analysis);
    console.log('   - –ï—Å—Ç—å –∞–Ω–∞–ª–∏–∑ –∑—Ä–µ–Ω–∏—è:', !!comprehensiveResult.vision_analysis);
    console.log('   - –ï—Å—Ç—å –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤:', !!comprehensiveResult.object_detection);
    console.log('');
    
    // –¢–µ—Å—Ç 7: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    console.log('üîç –¢–µ—Å—Ç 7: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ');
    const extensionResult = visualSemanticExtensions.extend('advancedImageAnalyzer', 'testMethod', function() {
      return '–¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç!';
    });
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:', extensionResult ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –ù–µ—É–¥–∞—á–Ω–æ');
    
    if (extensionResult) {
      const testMethodResult = visualSemanticExtensions.advancedImageAnalyzer.testMethod();
      console.log('   –í—ã–∑–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞:', testMethodResult);
    }
    console.log('');
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã
    console.log('üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ Visual-Semantic Extensions —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
    console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º—ã —Å ES –º–æ–¥—É–ª—è–º–∏ —Ä–µ—à–µ–Ω—ã —á–µ—Ä–µ–∑ CommonJS');
    console.log('‚úÖ Advanced Image Analyzer: –î–æ—Å—Ç—É–ø–µ–Ω');
    console.log('‚úÖ Smart Vision Analyzer: –î–æ—Å—Ç—É–ø–µ–Ω'); 
    console.log('‚úÖ Smart Object Detector: –î–æ—Å—Ç—É–ø–µ–Ω');
    console.log('');
    console.log('üöÄ Visual-Semantic —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testVisualSemanticExtensions()
  .then(success => {
    if (success) {
      console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    } else {
      console.log('\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ!');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });