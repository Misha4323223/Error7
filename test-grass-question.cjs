/**
 * –¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ "—á—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∞–≤–∞"
 */

async function testGrassQuestion() {
  console.log('üå± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ "—á—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∞–≤–∞"...');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º conversation engine –Ω–∞–ø—Ä—è–º—É—é
    const ConversationEngine = require('./server/conversation-engine.cjs');
    const conversationEngine = new ConversationEngine();
    
    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã...');
    
    const context = {
      sessionId: 'test-session',
      userId: 'test-user',
      timestamp: new Date().toISOString()
    };
    
    const response = await conversationEngine.processUserInput('—á—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∞–≤–∞', context);
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('–û—Ç–≤–µ—Ç:', response?.reply?.substring(0, 300) || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
    if (response?.reply && response.reply.length > 50) {
      console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
    } else {
      console.log('‚ùå –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –¥–∞–µ—Ç –ø–æ–ª–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testGrassQuestion();