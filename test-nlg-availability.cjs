/**
 * –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ natural-language-generator –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */

console.log('üîç –¢–ï–°–¢ –î–û–°–¢–£–ü–ù–û–°–¢–ò NATURAL-LANGUAGE-GENERATOR');

async function testNLGAvailability() {
  try {
    console.log('\nüì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º semantic-memory –º–æ–¥—É–ª—å...');
    
    const semanticMemory = require('./server/semantic-memory/index.cjs');
    
    console.log('\nüß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å natural-language-generator...');
    
    // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(async () => {
      try {
        const result = await semanticMemory.analyzeCompleteRequest('–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ø–ª–∞–Ω–µ—Ç—É –ú–∞—Ä—Å', {
          userId: 'test-user',
          includeAdvancedSemantics: true
        });
        
        console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢ SEMANTIC-MEMORY:');
        console.log('üîç –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', JSON.stringify(result, null, 2));
        
        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—è—Ö
        const responseText = result.response || 
                           result.generatedResponse?.response || 
                           result.analysis?.generatedResponse?.response ||
                           result.reply ||
                           result.message;
        
        console.log('Response length:', responseText?.length || 0);
        console.log('Response preview:', responseText?.substring(0, 200) || '–ù–ï–¢ –û–¢–í–ï–¢–ê');
        console.log('Contains "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å!":', responseText?.includes('–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å!'));
        console.log('Contains "–ú–∞—Ä—Å":', responseText?.includes('–ú–∞—Ä—Å'));
        console.log('Confidence:', result.confidence);
        console.log('Method used:', result.method);
        console.log('Response generated:', result.responseGenerated);
        console.log('NLG Module Status:', result.moduleStatus?.naturalLanguageGenerator);
        
      } catch (error) {
        console.error('‚ùå –û–®–ò–ë–ö–ê SEMANTIC-MEMORY:', error.message);
      }
    }, 2000);
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    console.error('‚ùå –°–¢–ï–ö:', error.stack?.substring(0, 500));
  }
}

testNLGAvailability();