/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ "—á—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∞–≤–∞"
 */

async function testGrassResponse() {
  console.log('üå± –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ —Ç—Ä–∞–≤–µ...');
  
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º natural-language-generator –Ω–∞–ø—Ä—è–º—É—é
    const NaturalLanguageGenerator = require('./server/semantic-memory/natural-language-generator.cjs');
    const nlg = new NaturalLanguageGenerator();
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ generateNaturalKnowledgeResponse
    const response = nlg.generateNaturalKnowledgeResponse('—á—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∞–≤–∞', {});
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:', response.length);
    console.log('–û—Ç–≤–µ—Ç:', response);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
    if (response && response.length > 200 && response.includes('–¢—Ä–∞–≤–∞')) {
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç –æ —Ç—Ä–∞–≤–µ');
    } else {
      console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –¥–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ —Ç—Ä–∞–≤–µ');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testGrassResponse();